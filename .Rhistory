names = c('Lissi', 'Marc', 'Moritz', 'Stefan', 'Hermann', 'Julian', 'Lorena', 'Celina')
N = length(names)
names_random = sample(names_seed, N, replace = FALSE)
names_seed = c('Lissi', 'Marc', 'Moritz', 'Stefan', 'Hermann', 'Julian', 'Lorena', 'Celina')
names_random = sample(names_seed, N, replace = FALSE)
names_random
period_seed = c(1:4)
period_seed = c(1:8)
restrict_periods = 1
names_pairs = c(names_random[1, 2])
names_pairs = c(names_random[1:2])
pairs_size = 2
group_size = 2
N/group_size
1:N/group_size
seq.int(1, N/group_size)
matrix(names_random, nrow = N/group_size, byrow = TRUE)
names_random
names_pairs  = matrix(names_random, nrow = N/group_size, byrow = TRUE)
data.frame(period_seed)
period_name = str("KW", period_seed)
period_name = sprintf("KW%i", period_seed)
period_name = sprintf("KW %i", period_seed)
names_table = data.frame(period_seed, period_name)
View(names_table)
names_table$names[iperiod] = names_random
iperiod = 1
names_table$names[iperiod] = names_random
names_seed  = c('Lissi', 'Marc', 'Moritz', 'Stefan', 'Hermann', 'Julian', 'Lorena', 'Celina')
period_seed = c(1:6)
period_name = sprintf("KW %i", period_seed)
restrict_periods = 1
group_size = 2
N = length(names)
names_table = data.frame(period_seed, period_name)
names_table$names = ""
View(names_table)
names_table$names[iperiod] = names_random
names_table$names = rep("", N)
names_table$names = rep("", 1, N)
rep("", 1, N)
nnames = length(names)
nnam = length(names)
names_seed  = c('Lissi', 'Marc', 'Moritz', 'Stefan', 'Hermann', 'Julian', 'Lorena', 'Celina')
period_seed = c(1:6)
period_name = sprintf("KW %i", period_seed)
restrict_periods = 1
group_size = 2
nnam = length(names_seed)
nper = length(period_seed)
names_table       = data.frame(period_seed, period_name)
names_table$names = rep("", nper, N)
rep("", nper, N)
names_table$names = rep("", nper)
iperiod = 1
names_random = sample(names_seed, N, replace = FALSE)
names_pairs  = matrix(names_random, nrow = N/group_size, byrow = TRUE)
iperiod == 1
names_table$names[iperiod] = names_random
names_table$names = c()
names_table$names[iperiod] = names_random
list(names_random)
names_table$names = ""
names_random = sample(names_seed, N, replace = FALSE)
names_pairs  = matrix(names_random, nrow = N/group_size, byrow = TRUE)
iperiod == 1
names_table$names[iperiod] = list(names_random)
names_table$names_select[iperiod] = list(names_random)
names_table       = data.frame(period_seed, period_name)
names_table              = data.frame(period_seed, period_name)
names_table$names_select = ""
names_table$names_select[iperiod] = list(names_random)
list(names_pairs)
names_table$names_select[iperiod] = list(names_pairs)
duplicated(names_pairs, names_table$names_select[1])
require(tidyverse)
require(tictoc)
# Set working directory to script file location
# Retrieve script location when code is run within RStudio
location.thisfile = dirname(rstudioapi::getActiveDocumentContext()$path)
# Retrieve script location if file is called via source()
#location.thisfile = dirname(sys.frame(1)$ofile)
# Setting working directory to file location
setwd(location.thisfile)
# -------------------------------------------------------------------------
# Data I/O
item = read.csv("db_item.csv")
selectItem = 210102
# Read full prices database
tic()
prices = read.csv("../prices-files/db_prices.csv")
toc()
# Check data
head(prices)
tail(prices)
prices = prices %>%
filter(!is.na(quote_date)) %>%
mutate(YEAR  = as.numeric(substr(quote_date, 1, 4)),
MONTH = as.numeric(substr(quote_date, 5, 6)),
QDATE = ymd(quote_date, truncated = 1)) %>%
filter(QDATE >= 1997)
prices = prices %>%
filter(!is.na(quote_date)) %>%
mutate(YEAR  = as.numeric(substr(quote_date, 1, 4)),
MONTH = as.numeric(substr(quote_date, 5, 6)),
QDATE = ymd(quote_date, truncated = 1)) %>%
filter(YEAR >= 1997)
summary(prices)
object.size(prices)
save.image("../prices-files/prices_workspace.RData")
# Reproduce bread chart
bread = prices %>%
filter(item_id == selectItem)
# Plot
ggplot() +
geom_point(aes(x = QDATE, y = price), bread)
require(tidyverse)
require(tictoc)
# Set working directory to script file location
# Retrieve script location when code is run within RStudio
location.thisfile = dirname(rstudioapi::getActiveDocumentContext()$path)
# Retrieve script location if file is called via source()
#location.thisfile = dirname(sys.frame(1)$ofile)
# Setting working directory to file location
setwd(location.thisfile)
# -------------------------------------------------------------------------
# Data I/O
load("../prices-files/prices_workspace.RData")
# -------------------------------------------------------------------------
# Aggregate
prices_aggregate_by_item = prices %>%
group_by(item, QDATE) %>%
summarise(price_ave = mean(price),
N = n())
tail(prices)
price = arrange(prices, item_id, QDATE)
tail(price)
price = arrange(item_id, region, QDATE)
price = arrange(prices, item_id, region, QDATE)
tail(price)
prices = arrange(prices, item_id, region, QDATE)
# -------------------------------------------------------------------------
# Aggregate
prices_aggregate_by_item = prices %>%
group_by(item, QDATE) %>%
summarise(price_ave = mean(price),
N = n())
# -------------------------------------------------------------------------
# Aggregate
prices_aggregate_by_item = prices %>%
group_by(item_id, QDATE) %>%
summarise(price_ave = mean(price),
N = n())
# -------------------------------------------------------------------------
# Aggregate
prices_aggregate_by_item = prices %>%
group_by(item_id, QDATE) %>%
summarise(price_ave = mean(price),
N = n()) %%
ungroup()
# -------------------------------------------------------------------------
# Aggregate
prices_aggregate_by_item = prices %>%
group_by(item_id, QDATE) %>%
summarise(price_ave = mean(price),
N = n())
tail(prices_aggregate_by_item)
prices_aggregate_by_item %>%
filter(item_id == 210102)
prices_aggregate_by_item %>%
filter(item_id == 210102) %>%
ggplot() +
geom_line(aes(x = QDATE, y = price_ave))
filter(prices, QDATE == "2023-01-01", item_id == 210102)
filter(prices, QDATE == "2023-01-01", item_id == 210102, shop_code == 803)
filter(prices, QDATE == "2022-12-01", item_id == 210102, shop_code == 803)
filter(prices, QDATE == "2022-11-01", item_id == 210102, shop_code == 803)
prices_aggregate_by_RSIT = prices %>%
group_by(region, shop_code, item_id, QDATE) %>%
summarise(price_change = log(price)-log(lag(price, 1)))
